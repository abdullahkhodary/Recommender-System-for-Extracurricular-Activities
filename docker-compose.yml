version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: recommender_db
    ports:
      - "5432:5432"
    networks:
      - recommender_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - recommender_network

  pyspark:
    image: jupyter/pyspark-notebook:latest
    container_name: pyspark
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      NB_USER: "admin"
      NB_PASS: "admin"
    ports:
      - "8888:8888"
    networks:
      - recommender_network

  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      NB_USER: "admin"
      NB_PASS: "admin"
    ports:
      - "8889:8888"
    networks:
      - recommender_network

  airflow-init:
    image: apache/airflow:2.9.2
    container_name: airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres/recommender_db
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: "my_secret_key"
      AIRFLOW__CORE__FERNET_KEY: "jC1902-VCgyLfIRLwICmwDRuW9fkdRw_p4hljhartj0="
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    entrypoint:
      - /bin/bash
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username "$${_AIRFLOW_WWW_USER_USERNAME}" \
          --password "$${_AIRFLOW_WWW_USER_PASSWORD}" \
          --firstname Airflow \
          --lastname Admin \
          --role Admin \
          --email admin@example.com
    depends_on:
      - postgres
    networks:
      - recommender_network

  airflow-webserver:
    image: apache/airflow:2.9.2
    container_name: airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres/recommender_db
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__AUTHENTICATE: 'True'
      AIRFLOW__WEBSERVER__AUTH_BACKEND: 'airflow.www.security.password_auth'
      AIRFLOW__WEBSERVER__SECRET_KEY: "my_secret_key"
      AIRFLOW__CORE__FERNET_KEY: "jC1902-VCgyLfIRLwICmwDRuW9fkdRw_p4hljhartj0="
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    command: webserver
    ports:
      - "8081:8080"
    depends_on:
      - airflow-init
      - postgres
      - pgadmin
      - pyspark
      - jupyter
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - recommender_network

  airflow-scheduler:
    image: apache/airflow:2.9.2
    container_name: airflow-scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin@postgres/recommender_db
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: "my_secret_key"
      AIRFLOW__CORE__FERNET_KEY: "jC1902-VCgyLfIRLwICmwDRuW9fkdRw_p4hljhartj0="
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    command: scheduler
    depends_on:
      - airflow-init
      - postgres
      - pgadmin
      - pyspark
      - jupyter
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - recommender_network

networks:
  recommender_network:
    driver: bridge
